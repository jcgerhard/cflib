/**
 * @license MIT
 * cflib v0.0.1
 * Copyright (c) 2025 Jan C. Gerhard <jang@hybridsoftware.com>
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).cflib=t()}(this,(function(){var e,t;return e=this,t=function(){"use strict";return{cls:Object.freeze({__proto__:null,getDarkestColor:function(e){return e.find((e=>-100===e.L))}}),env:Object.freeze({__proto__:null,getCflibVersion:function(){return"0.0.1"},getCloudflowVersion:function(){const{major:e,minor:t,rev:n,build:r}=api.portal.version();return`${e}.${t}.${n} b${r}`},getPackzflowVersion:function(){const{packzflow_major:e,packzflow_minor:t,packzflow_build:n}=api.portal.version();return`${e}.${t} b${n}`}}),ksk:Object.freeze({__proto__:null}),mta:Object.freeze({__proto__:null}),rip:Object.freeze({__proto__:null}),sys:Object.freeze({__proto__:null}),usr:Object.freeze({__proto__:null}),utl:Object.freeze({__proto__:null,incrementNumber:function(e,t={},n){if(void 0===e||"number"!=typeof e||e<0)throw new Error("The startNumber must be a defined, positive number.");if(void 0!==n&&"function"!=typeof n)throw new Error("The callback must be a function if provided.");const{length:r=8,step:o=1,character:u="0"}=t,i=[];"number"!=typeof r&&i.push("length must be a number"),"number"!=typeof o&&i.push("step must be a number"),"string"!=typeof u&&i.push("character must be a string"),r<=0&&i.push("length must be a positive number"),1!==u.length&&i.push("character must be exactly 1 character");const f=e+o,l=String(f).length;if(r<l&&i.push(`length (${r}) must be greater than or equal to the length of the incremented number (${l})`),i.length>0)throw new Error(`CFLIB Error - Invalid option(s): ${i.join(", ")}`);const c=String(f).padStart(r,u);return"function"==typeof n&&n(f,c),c}})}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).cflib=t(),cflib}));
